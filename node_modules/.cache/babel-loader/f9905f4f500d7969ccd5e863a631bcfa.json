{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst schema_1 = require(\"../schema\");\n\nclass ArraySchema extends schema_1.Schema {\n  constructor(_a) {\n    var {\n      valueSchema,\n      name = valueSchema.name\n    } = _a,\n        handlers = tslib_1.__rest(_a, [\"valueSchema\", \"name\"]);\n\n    super(Object.assign({}, handlers, {\n      name\n    }));\n    this._valueSchema = valueSchema;\n  }\n\n  expected(utils) {\n    return `an array of ${this._valueSchema.expected(utils)}`;\n  }\n\n  validate(value, utils) {\n    if (!Array.isArray(value)) {\n      return false;\n    }\n\n    const invalidValues = [];\n\n    for (const subValue of value) {\n      const subValidateResult = utils.normalizeValidateResult(this._valueSchema.validate(subValue, utils), subValue);\n\n      if (subValidateResult !== true) {\n        invalidValues.push(subValidateResult.value);\n      }\n    }\n\n    return invalidValues.length === 0 ? true : {\n      value: invalidValues\n    };\n  }\n\n  deprecated(value, utils) {\n    const deprecatedResult = [];\n\n    for (const subValue of value) {\n      const subDeprecatedResult = utils.normalizeDeprecatedResult(this._valueSchema.deprecated(subValue, utils), subValue);\n\n      if (subDeprecatedResult !== false) {\n        deprecatedResult.push(...subDeprecatedResult.map(({\n          value: deprecatedValue\n        }) => ({\n          value: [deprecatedValue]\n        })));\n      }\n    }\n\n    return deprecatedResult;\n  }\n\n  forward(value, utils) {\n    const forwardResult = [];\n\n    for (const subValue of value) {\n      const subForwardResult = utils.normalizeForwardResult(this._valueSchema.forward(subValue, utils), subValue);\n      forwardResult.push(...subForwardResult.map(wrapTransferResult));\n    }\n\n    return forwardResult;\n  }\n\n  redirect(value, utils) {\n    const remain = [];\n    const redirect = [];\n\n    for (const subValue of value) {\n      const subRedirectResult = utils.normalizeRedirectResult(this._valueSchema.redirect(subValue, utils), subValue);\n\n      if ('remain' in subRedirectResult) {\n        remain.push(subRedirectResult.remain);\n      }\n\n      redirect.push(...subRedirectResult.redirect.map(wrapTransferResult));\n    }\n\n    return remain.length === 0 ? {\n      redirect\n    } : {\n      redirect,\n      remain\n    };\n  }\n\n  overlap(currentValue, newValue) {\n    return currentValue.concat(newValue);\n  }\n\n}\n\nexports.ArraySchema = ArraySchema;\n\nfunction wrapTransferResult({\n  from,\n  to\n}) {\n  return {\n    from: [from],\n    to\n  };\n}","map":{"version":3,"sources":["/Users/pranamyavadlamani/Desktop/Research/PortFolio/portfolio-site/node_modules/vnopts/lib/schemas/array.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","schema_1","ArraySchema","Schema","constructor","_a","valueSchema","name","handlers","__rest","assign","_valueSchema","expected","utils","validate","Array","isArray","invalidValues","subValue","subValidateResult","normalizeValidateResult","push","length","deprecated","deprecatedResult","subDeprecatedResult","normalizeDeprecatedResult","map","deprecatedValue","forward","forwardResult","subForwardResult","normalizeForwardResult","wrapTransferResult","redirect","remain","subRedirectResult","normalizeRedirectResult","overlap","currentValue","newValue","concat","from","to"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst schema_1 = require(\"../schema\");\nclass ArraySchema extends schema_1.Schema {\n    constructor(_a) {\n        var { valueSchema, name = valueSchema.name } = _a, handlers = tslib_1.__rest(_a, [\"valueSchema\", \"name\"]);\n        super(Object.assign({}, handlers, { name }));\n        this._valueSchema = valueSchema;\n    }\n    expected(utils) {\n        return `an array of ${this._valueSchema.expected(utils)}`;\n    }\n    validate(value, utils) {\n        if (!Array.isArray(value)) {\n            return false;\n        }\n        const invalidValues = [];\n        for (const subValue of value) {\n            const subValidateResult = utils.normalizeValidateResult(this._valueSchema.validate(subValue, utils), subValue);\n            if (subValidateResult !== true) {\n                invalidValues.push(subValidateResult.value);\n            }\n        }\n        return invalidValues.length === 0 ? true : { value: invalidValues };\n    }\n    deprecated(value, utils) {\n        const deprecatedResult = [];\n        for (const subValue of value) {\n            const subDeprecatedResult = utils.normalizeDeprecatedResult(this._valueSchema.deprecated(subValue, utils), subValue);\n            if (subDeprecatedResult !== false) {\n                deprecatedResult.push(...subDeprecatedResult.map(({ value: deprecatedValue }) => ({\n                    value: [deprecatedValue],\n                })));\n            }\n        }\n        return deprecatedResult;\n    }\n    forward(value, utils) {\n        const forwardResult = [];\n        for (const subValue of value) {\n            const subForwardResult = utils.normalizeForwardResult(this._valueSchema.forward(subValue, utils), subValue);\n            forwardResult.push(...subForwardResult.map(wrapTransferResult));\n        }\n        return forwardResult;\n    }\n    redirect(value, utils) {\n        const remain = [];\n        const redirect = [];\n        for (const subValue of value) {\n            const subRedirectResult = utils.normalizeRedirectResult(this._valueSchema.redirect(subValue, utils), subValue);\n            if ('remain' in subRedirectResult) {\n                remain.push(subRedirectResult.remain);\n            }\n            redirect.push(...subRedirectResult.redirect.map(wrapTransferResult));\n        }\n        return remain.length === 0 ? { redirect } : { redirect, remain };\n    }\n    overlap(currentValue, newValue) {\n        return currentValue.concat(newValue);\n    }\n}\nexports.ArraySchema = ArraySchema;\nfunction wrapTransferResult({ from, to }) {\n    return { from: [from], to };\n}\n"]},"metadata":{},"sourceType":"script"}