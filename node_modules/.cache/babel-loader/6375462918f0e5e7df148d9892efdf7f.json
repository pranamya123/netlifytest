{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _default(opts) {\n  const visitor = {};\n\n  visitor.JSXNamespacedName = function (path) {\n    if (opts.throwIfNamespace) {\n      throw path.buildCodeFrameError(`Namespace tags are not supported by default. React's JSX doesn't support namespace tags. \\\nYou can set \\`throwIfNamespace: false\\` to bypass this warning.`);\n    }\n  };\n\n  visitor.JSXSpreadChild = function (path) {\n    throw path.buildCodeFrameError(\"Spread children are not supported in React.\");\n  };\n\n  visitor.JSXElement = {\n    exit(path, file) {\n      const callExpr = buildElementCall(path, file);\n\n      if (callExpr) {\n        path.replaceWith(t.inherits(callExpr, path.node));\n      }\n    }\n\n  };\n  visitor.JSXFragment = {\n    exit(path, file) {\n      if (opts.compat) {\n        throw path.buildCodeFrameError(\"Fragment tags are only supported in React 16 and up.\");\n      }\n\n      const callExpr = buildFragmentCall(path, file);\n\n      if (callExpr) {\n        path.replaceWith(t.inherits(callExpr, path.node));\n      }\n    }\n\n  };\n  return visitor;\n\n  function convertJSXIdentifier(node, parent) {\n    if (t.isJSXIdentifier(node)) {\n      if (node.name === \"this\" && t.isReferenced(node, parent)) {\n        return t.thisExpression();\n      } else if (t.isValidIdentifier(node.name, false)) {\n        node.type = \"Identifier\";\n      } else {\n        return t.stringLiteral(node.name);\n      }\n    } else if (t.isJSXMemberExpression(node)) {\n      return t.memberExpression(convertJSXIdentifier(node.object, node), convertJSXIdentifier(node.property, node));\n    } else if (t.isJSXNamespacedName(node)) {\n      return t.stringLiteral(`${node.namespace.name}:${node.name.name}`);\n    }\n\n    return node;\n  }\n\n  function convertAttributeValue(node) {\n    if (t.isJSXExpressionContainer(node)) {\n      return node.expression;\n    } else {\n      return node;\n    }\n  }\n\n  function convertAttribute(node) {\n    const value = convertAttributeValue(node.value || t.booleanLiteral(true));\n\n    if (t.isJSXSpreadAttribute(node)) {\n      return t.spreadElement(node.argument);\n    }\n\n    if (t.isStringLiteral(value) && !t.isJSXExpressionContainer(node.value)) {\n      var _value$extra;\n\n      value.value = value.value.replace(/\\n\\s+/g, \" \");\n      (_value$extra = value.extra) == null ? true : delete _value$extra.raw;\n    }\n\n    if (t.isJSXNamespacedName(node.name)) {\n      node.name = t.stringLiteral(node.name.namespace.name + \":\" + node.name.name.name);\n    } else if (t.isValidIdentifier(node.name.name, false)) {\n      node.name.type = \"Identifier\";\n    } else {\n      node.name = t.stringLiteral(node.name.name);\n    }\n\n    return t.inherits(t.objectProperty(node.name, value), node);\n  }\n\n  function buildElementCall(path, file) {\n    if (opts.filter && !opts.filter(path.node, file)) return;\n    const openingPath = path.get(\"openingElement\");\n    openingPath.parent.children = t.react.buildChildren(openingPath.parent);\n    const tagExpr = convertJSXIdentifier(openingPath.node.name, openingPath.node);\n    const args = [];\n    let tagName;\n\n    if (t.isIdentifier(tagExpr)) {\n      tagName = tagExpr.name;\n    } else if (t.isLiteral(tagExpr)) {\n      tagName = tagExpr.value;\n    }\n\n    const state = {\n      tagExpr: tagExpr,\n      tagName: tagName,\n      args: args,\n      pure: false\n    };\n\n    if (opts.pre) {\n      opts.pre(state, file);\n    }\n\n    let attribs = openingPath.node.attributes;\n\n    if (attribs.length) {\n      attribs = buildOpeningElementAttributes(attribs, file);\n    } else {\n      attribs = t.nullLiteral();\n    }\n\n    args.push(attribs, ...path.node.children);\n\n    if (opts.post) {\n      opts.post(state, file);\n    }\n\n    const call = state.call || t.callExpression(state.callee, args);\n    if (state.pure) (0, _helperAnnotateAsPure.default)(call);\n    return call;\n  }\n\n  function pushProps(_props, objs) {\n    if (!_props.length) return _props;\n    objs.push(t.objectExpression(_props));\n    return [];\n  }\n\n  function buildOpeningElementAttributes(attribs, file) {\n    let _props = [];\n    const objs = [];\n    const {\n      useSpread = false\n    } = file.opts;\n\n    if (typeof useSpread !== \"boolean\") {\n      throw new Error(\"transform-react-jsx currently only accepts a boolean option for \" + \"useSpread (defaults to false)\");\n    }\n\n    const useBuiltIns = file.opts.useBuiltIns || false;\n\n    if (typeof useBuiltIns !== \"boolean\") {\n      throw new Error(\"transform-react-jsx currently only accepts a boolean option for \" + \"useBuiltIns (defaults to false)\");\n    }\n\n    if (useSpread && useBuiltIns) {\n      throw new Error(\"transform-react-jsx currently only accepts useBuiltIns or useSpread \" + \"but not both\");\n    }\n\n    if (useSpread) {\n      const props = attribs.map(convertAttribute);\n      return t.objectExpression(props);\n    }\n\n    while (attribs.length) {\n      const prop = attribs.shift();\n\n      if (t.isJSXSpreadAttribute(prop)) {\n        _props = pushProps(_props, objs);\n        objs.push(prop.argument);\n      } else {\n        _props.push(convertAttribute(prop));\n      }\n    }\n\n    pushProps(_props, objs);\n\n    if (objs.length === 1) {\n      attribs = objs[0];\n    } else {\n      if (!t.isObjectExpression(objs[0])) {\n        objs.unshift(t.objectExpression([]));\n      }\n\n      const helper = useBuiltIns ? t.memberExpression(t.identifier(\"Object\"), t.identifier(\"assign\")) : file.addHelper(\"extends\");\n      attribs = t.callExpression(helper, objs);\n    }\n\n    return attribs;\n  }\n\n  function buildFragmentCall(path, file) {\n    if (opts.filter && !opts.filter(path.node, file)) return;\n    const openingPath = path.get(\"openingElement\");\n    openingPath.parent.children = t.react.buildChildren(openingPath.parent);\n    const args = [];\n    const tagName = null;\n    const tagExpr = file.get(\"jsxFragIdentifier\")();\n    const state = {\n      tagExpr: tagExpr,\n      tagName: tagName,\n      args: args,\n      pure: false\n    };\n\n    if (opts.pre) {\n      opts.pre(state, file);\n    }\n\n    args.push(t.nullLiteral(), ...path.node.children);\n\n    if (opts.post) {\n      opts.post(state, file);\n    }\n\n    file.set(\"usedFragment\", true);\n    const call = state.call || t.callExpression(state.callee, args);\n    if (state.pure) (0, _helperAnnotateAsPure.default)(call);\n    return call;\n  }\n}","map":{"version":3,"sources":["/Users/pranamyavadlamani/Desktop/Research/PortFolio/portfolio-site/node_modules/@babel/helper-builder-react-jsx/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_default","t","_interopRequireWildcard","require","_helperAnnotateAsPure","_interopRequireDefault","obj","__esModule","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","opts","visitor","JSXNamespacedName","path","throwIfNamespace","buildCodeFrameError","JSXSpreadChild","JSXElement","exit","file","callExpr","buildElementCall","replaceWith","inherits","node","JSXFragment","compat","buildFragmentCall","convertJSXIdentifier","parent","isJSXIdentifier","name","isReferenced","thisExpression","isValidIdentifier","type","stringLiteral","isJSXMemberExpression","memberExpression","object","property","isJSXNamespacedName","namespace","convertAttributeValue","isJSXExpressionContainer","expression","convertAttribute","booleanLiteral","isJSXSpreadAttribute","spreadElement","argument","isStringLiteral","_value$extra","replace","extra","raw","objectProperty","filter","openingPath","children","react","buildChildren","tagExpr","args","tagName","isIdentifier","isLiteral","state","pure","pre","attribs","attributes","length","buildOpeningElementAttributes","nullLiteral","push","post","callExpression","callee","pushProps","_props","objs","objectExpression","useSpread","Error","useBuiltIns","props","map","prop","shift","isObjectExpression","unshift","helper","identifier","addHelper"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _helperAnnotateAsPure = _interopRequireDefault(require(\"@babel/helper-annotate-as-pure\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _default(opts) {\n  const visitor = {};\n\n  visitor.JSXNamespacedName = function (path) {\n    if (opts.throwIfNamespace) {\n      throw path.buildCodeFrameError(`Namespace tags are not supported by default. React's JSX doesn't support namespace tags. \\\nYou can set \\`throwIfNamespace: false\\` to bypass this warning.`);\n    }\n  };\n\n  visitor.JSXSpreadChild = function (path) {\n    throw path.buildCodeFrameError(\"Spread children are not supported in React.\");\n  };\n\n  visitor.JSXElement = {\n    exit(path, file) {\n      const callExpr = buildElementCall(path, file);\n\n      if (callExpr) {\n        path.replaceWith(t.inherits(callExpr, path.node));\n      }\n    }\n\n  };\n  visitor.JSXFragment = {\n    exit(path, file) {\n      if (opts.compat) {\n        throw path.buildCodeFrameError(\"Fragment tags are only supported in React 16 and up.\");\n      }\n\n      const callExpr = buildFragmentCall(path, file);\n\n      if (callExpr) {\n        path.replaceWith(t.inherits(callExpr, path.node));\n      }\n    }\n\n  };\n  return visitor;\n\n  function convertJSXIdentifier(node, parent) {\n    if (t.isJSXIdentifier(node)) {\n      if (node.name === \"this\" && t.isReferenced(node, parent)) {\n        return t.thisExpression();\n      } else if (t.isValidIdentifier(node.name, false)) {\n        node.type = \"Identifier\";\n      } else {\n        return t.stringLiteral(node.name);\n      }\n    } else if (t.isJSXMemberExpression(node)) {\n      return t.memberExpression(convertJSXIdentifier(node.object, node), convertJSXIdentifier(node.property, node));\n    } else if (t.isJSXNamespacedName(node)) {\n      return t.stringLiteral(`${node.namespace.name}:${node.name.name}`);\n    }\n\n    return node;\n  }\n\n  function convertAttributeValue(node) {\n    if (t.isJSXExpressionContainer(node)) {\n      return node.expression;\n    } else {\n      return node;\n    }\n  }\n\n  function convertAttribute(node) {\n    const value = convertAttributeValue(node.value || t.booleanLiteral(true));\n\n    if (t.isJSXSpreadAttribute(node)) {\n      return t.spreadElement(node.argument);\n    }\n\n    if (t.isStringLiteral(value) && !t.isJSXExpressionContainer(node.value)) {\n      var _value$extra;\n\n      value.value = value.value.replace(/\\n\\s+/g, \" \");\n      (_value$extra = value.extra) == null ? true : delete _value$extra.raw;\n    }\n\n    if (t.isJSXNamespacedName(node.name)) {\n      node.name = t.stringLiteral(node.name.namespace.name + \":\" + node.name.name.name);\n    } else if (t.isValidIdentifier(node.name.name, false)) {\n      node.name.type = \"Identifier\";\n    } else {\n      node.name = t.stringLiteral(node.name.name);\n    }\n\n    return t.inherits(t.objectProperty(node.name, value), node);\n  }\n\n  function buildElementCall(path, file) {\n    if (opts.filter && !opts.filter(path.node, file)) return;\n    const openingPath = path.get(\"openingElement\");\n    openingPath.parent.children = t.react.buildChildren(openingPath.parent);\n    const tagExpr = convertJSXIdentifier(openingPath.node.name, openingPath.node);\n    const args = [];\n    let tagName;\n\n    if (t.isIdentifier(tagExpr)) {\n      tagName = tagExpr.name;\n    } else if (t.isLiteral(tagExpr)) {\n      tagName = tagExpr.value;\n    }\n\n    const state = {\n      tagExpr: tagExpr,\n      tagName: tagName,\n      args: args,\n      pure: false\n    };\n\n    if (opts.pre) {\n      opts.pre(state, file);\n    }\n\n    let attribs = openingPath.node.attributes;\n\n    if (attribs.length) {\n      attribs = buildOpeningElementAttributes(attribs, file);\n    } else {\n      attribs = t.nullLiteral();\n    }\n\n    args.push(attribs, ...path.node.children);\n\n    if (opts.post) {\n      opts.post(state, file);\n    }\n\n    const call = state.call || t.callExpression(state.callee, args);\n    if (state.pure) (0, _helperAnnotateAsPure.default)(call);\n    return call;\n  }\n\n  function pushProps(_props, objs) {\n    if (!_props.length) return _props;\n    objs.push(t.objectExpression(_props));\n    return [];\n  }\n\n  function buildOpeningElementAttributes(attribs, file) {\n    let _props = [];\n    const objs = [];\n    const {\n      useSpread = false\n    } = file.opts;\n\n    if (typeof useSpread !== \"boolean\") {\n      throw new Error(\"transform-react-jsx currently only accepts a boolean option for \" + \"useSpread (defaults to false)\");\n    }\n\n    const useBuiltIns = file.opts.useBuiltIns || false;\n\n    if (typeof useBuiltIns !== \"boolean\") {\n      throw new Error(\"transform-react-jsx currently only accepts a boolean option for \" + \"useBuiltIns (defaults to false)\");\n    }\n\n    if (useSpread && useBuiltIns) {\n      throw new Error(\"transform-react-jsx currently only accepts useBuiltIns or useSpread \" + \"but not both\");\n    }\n\n    if (useSpread) {\n      const props = attribs.map(convertAttribute);\n      return t.objectExpression(props);\n    }\n\n    while (attribs.length) {\n      const prop = attribs.shift();\n\n      if (t.isJSXSpreadAttribute(prop)) {\n        _props = pushProps(_props, objs);\n        objs.push(prop.argument);\n      } else {\n        _props.push(convertAttribute(prop));\n      }\n    }\n\n    pushProps(_props, objs);\n\n    if (objs.length === 1) {\n      attribs = objs[0];\n    } else {\n      if (!t.isObjectExpression(objs[0])) {\n        objs.unshift(t.objectExpression([]));\n      }\n\n      const helper = useBuiltIns ? t.memberExpression(t.identifier(\"Object\"), t.identifier(\"assign\")) : file.addHelper(\"extends\");\n      attribs = t.callExpression(helper, objs);\n    }\n\n    return attribs;\n  }\n\n  function buildFragmentCall(path, file) {\n    if (opts.filter && !opts.filter(path.node, file)) return;\n    const openingPath = path.get(\"openingElement\");\n    openingPath.parent.children = t.react.buildChildren(openingPath.parent);\n    const args = [];\n    const tagName = null;\n    const tagExpr = file.get(\"jsxFragIdentifier\")();\n    const state = {\n      tagExpr: tagExpr,\n      tagName: tagName,\n      args: args,\n      pure: false\n    };\n\n    if (opts.pre) {\n      opts.pre(state, file);\n    }\n\n    args.push(t.nullLiteral(), ...path.node.children);\n\n    if (opts.post) {\n      opts.post(state, file);\n    }\n\n    file.set(\"usedFragment\", true);\n    const call = state.call || t.callExpression(state.callee, args);\n    if (state.pure) (0, _helperAnnotateAsPure.default)(call);\n    return call;\n  }\n}"]},"metadata":{},"sourceType":"script"}