{"ast":null,"code":"/*\nCopyright (c) 2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport React from 'react';\nimport { transformFromAstSync } from '@babel/core'; //@ts-ignore\n\nimport presetReact from '@babel/preset-react';\nimport { parse } from '../ast';\nimport { getStyles } from '../utils';\n\nconst errorBoundary = (Element, errorCallback) => {\n  class ErrorBoundary extends React.Component {\n    componentDidCatch(error) {\n      errorCallback(error);\n    }\n\n    render() {\n      if (typeof Element === 'undefined') return null;\n      return typeof Element === 'function' ? React.createElement(Element, null) : Element;\n    }\n\n  }\n\n  return ErrorBoundary;\n};\n\nconst evalCode = (ast, scope, presets) => {\n  const transformedCode = transformFromAstSync(ast, undefined, {\n    presets: presets ? [presetReact, ...presets] : [presetReact],\n    inputSourceMap: false,\n    sourceMaps: false,\n    // TS preset needs this and it doesn't seem to matter when TS preset\n    // is not used, so let's keep it here?\n    filename: 'file.tsx'\n  });\n  const resultCode = transformedCode ? transformedCode.code : '';\n  const scopeKeys = Object.keys(scope);\n  const scopeValues = Object.values(scope); //@ts-ignore\n\n  const res = new Function('React', ...scopeKeys, `return ${resultCode}`);\n  return res(React, ...scopeValues);\n};\n\nconst generateElement = (ast, scope, errorCallback, presets) => {\n  return errorBoundary(evalCode(ast, scope, presets), errorCallback);\n};\n\nconst transpile = (code, transformations, scope, setOutput, setError, presets) => {\n  try {\n    const ast = transformations.reduce((result, transformation) => transformation(result), parse(code));\n    const component = generateElement(ast, scope, error => {\n      setError(error.toString());\n    }, presets);\n    setOutput({\n      component\n    });\n    setError(null);\n  } catch (error) {\n    setError(error.toString());\n  }\n};\n\nconst Compiler = ({\n  scope,\n  code,\n  setError,\n  transformations,\n  placeholder,\n  minHeight,\n  presets,\n  className\n}) => {\n  const [output, setOutput] = React.useState({\n    component: null\n  });\n  React.useEffect(() => {\n    transpile(code, transformations, scope, setOutput, setError, presets);\n  }, [code]);\n  const Element = output.component;\n  const Placeholder = placeholder;\n  return React.createElement(\"div\", Object.assign({}, getStyles({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    flexWrap: 'wrap',\n    minHeight: `${minHeight || 0}px`,\n    paddingTop: minHeight ? '16px' : 0,\n    paddingBottom: minHeight ? '16px' : 0\n  }, className)), Element ? React.createElement(Element, null) : Placeholder ? React.createElement(Placeholder, {\n    height: minHeight || 32\n  }) : null);\n};\n\nexport default React.memo(Compiler, (prevProps, nextProps) => prevProps.code === nextProps.code);","map":{"version":3,"sources":["../../../src/ui/compiler.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nCopyright (c) 2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport React from 'react';\nimport { transformFromAstSync } from '@babel/core';\n//@ts-ignore\nimport presetReact from '@babel/preset-react';\nimport { parse } from '../ast';\nimport { getStyles } from '../utils';\nconst errorBoundary = (Element, errorCallback) => {\n    class ErrorBoundary extends React.Component {\n        componentDidCatch(error) {\n            errorCallback(error);\n        }\n        render() {\n            if (typeof Element === 'undefined')\n                return null;\n            return typeof Element === 'function' ? React.createElement(Element, null) : Element;\n        }\n    }\n    return ErrorBoundary;\n};\nconst evalCode = (ast, scope, presets) => {\n    const transformedCode = transformFromAstSync(ast, undefined, {\n        presets: presets ? [presetReact, ...presets] : [presetReact],\n        inputSourceMap: false,\n        sourceMaps: false,\n        // TS preset needs this and it doesn't seem to matter when TS preset\n        // is not used, so let's keep it here?\n        filename: 'file.tsx',\n    });\n    const resultCode = transformedCode ? transformedCode.code : '';\n    const scopeKeys = Object.keys(scope);\n    const scopeValues = Object.values(scope);\n    //@ts-ignore\n    const res = new Function('React', ...scopeKeys, `return ${resultCode}`);\n    return res(React, ...scopeValues);\n};\nconst generateElement = (ast, scope, errorCallback, presets) => {\n    return errorBoundary(evalCode(ast, scope, presets), errorCallback);\n};\nconst transpile = (code, transformations, scope, setOutput, setError, presets) => {\n    try {\n        const ast = transformations.reduce((result, transformation) => transformation(result), parse(code));\n        const component = generateElement(ast, scope, (error) => {\n            setError(error.toString());\n        }, presets);\n        setOutput({ component });\n        setError(null);\n    }\n    catch (error) {\n        setError(error.toString());\n    }\n};\nconst Compiler = ({ scope, code, setError, transformations, placeholder, minHeight, presets, className, }) => {\n    const [output, setOutput] = React.useState({ component: null });\n    React.useEffect(() => {\n        transpile(code, transformations, scope, setOutput, setError, presets);\n    }, [code]);\n    const Element = output.component;\n    const Placeholder = placeholder;\n    return (React.createElement(\"div\", Object.assign({}, getStyles({\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        flexWrap: 'wrap',\n        minHeight: `${minHeight || 0}px`,\n        paddingTop: minHeight ? '16px' : 0,\n        paddingBottom: minHeight ? '16px' : 0,\n    }, className)), Element ? (React.createElement(Element, null)) : Placeholder ? (React.createElement(Placeholder, { height: minHeight || 32 })) : null));\n};\nexport default React.memo(Compiler, (prevProps, nextProps) => prevProps.code === nextProps.code);\n//# sourceMappingURL=compiler.js.map"]},"metadata":{},"sourceType":"module"}