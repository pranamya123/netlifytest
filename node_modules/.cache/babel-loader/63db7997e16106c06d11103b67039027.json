{"ast":null,"code":"\"use strict\";\n\nvar version = require(\"../package.json\").version;\n\nvar core = require(\"./main/core\");\n\nvar internalPlugins = [require(\"./language-js\")];\n\nvar isArray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) === \"[object Array]\";\n}; // Luckily `opts` is always the 2nd argument\n\n\nfunction withPlugins(fn) {\n  return function () {\n    var args = Array.from(arguments);\n    var plugins = args[1] && args[1].plugins || [];\n\n    if (!isArray(plugins)) {\n      plugins = Object.values(plugins);\n    }\n\n    args[1] = Object.assign({}, args[1], {\n      plugins: internalPlugins.concat(plugins)\n    });\n    return fn.apply(null, args);\n  };\n}\n\nvar formatWithCursor = withPlugins(core.formatWithCursor);\nmodule.exports = {\n  formatWithCursor: formatWithCursor,\n  format: function format(text, opts) {\n    return formatWithCursor(text, opts).formatted;\n  },\n  check: function check(text, opts) {\n    var formatted = formatWithCursor(text, opts).formatted;\n    return formatted === text;\n  },\n  version: version,\n  __debug: {\n    parse: withPlugins(core.parse),\n    formatAST: withPlugins(core.formatAST),\n    formatDoc: withPlugins(core.formatDoc),\n    printToDoc: withPlugins(core.printToDoc),\n    printDocToString: withPlugins(core.printDocToString)\n  }\n};","map":{"version":3,"sources":["/Users/pranamyavadlamani/Desktop/Research/PortFolio/portfolio-site/node_modules/@miksu/prettier/lib/standalone.js"],"names":["version","require","core","internalPlugins","isArray","Array","arr","Object","prototype","toString","call","withPlugins","fn","args","from","arguments","plugins","values","assign","concat","apply","formatWithCursor","module","exports","format","text","opts","formatted","check","__debug","parse","formatAST","formatDoc","printToDoc","printDocToString"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,OAAzC;;AAEA,IAAIE,IAAI,GAAGD,OAAO,CAAC,aAAD,CAAlB;;AAEA,IAAIE,eAAe,GAAG,CAACF,OAAO,CAAC,eAAD,CAAR,CAAtB;;AAEA,IAAIG,OAAO,GAAGC,KAAK,CAACD,OAAN,IAAiB,UAAUE,GAAV,EAAe;AAC5C,SAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,MAAwC,gBAA/C;AACD,CAFD,C,CAEG;;;AAGH,SAASK,WAAT,CAAqBC,EAArB,EAAyB;AACvB,SAAO,YAAY;AACjB,QAAIC,IAAI,GAAGR,KAAK,CAACS,IAAN,CAAWC,SAAX,CAAX;AACA,QAAIC,OAAO,GAAGH,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAJ,CAAQG,OAAnB,IAA8B,EAA5C;;AAEA,QAAI,CAACZ,OAAO,CAACY,OAAD,CAAZ,EAAuB;AACrBA,MAAAA,OAAO,GAAGT,MAAM,CAACU,MAAP,CAAcD,OAAd,CAAV;AACD;;AAEDH,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUN,MAAM,CAACW,MAAP,CAAc,EAAd,EAAkBL,IAAI,CAAC,CAAD,CAAtB,EAA2B;AACnCG,MAAAA,OAAO,EAAEb,eAAe,CAACgB,MAAhB,CAAuBH,OAAvB;AAD0B,KAA3B,CAAV;AAGA,WAAOJ,EAAE,CAACQ,KAAH,CAAS,IAAT,EAAeP,IAAf,CAAP;AACD,GAZD;AAaD;;AAED,IAAIQ,gBAAgB,GAAGV,WAAW,CAACT,IAAI,CAACmB,gBAAN,CAAlC;AACAC,MAAM,CAACC,OAAP,GAAiB;AACfF,EAAAA,gBAAgB,EAAEA,gBADH;AAEfG,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AAClC,WAAOL,gBAAgB,CAACI,IAAD,EAAOC,IAAP,CAAhB,CAA6BC,SAApC;AACD,GAJc;AAKfC,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeH,IAAf,EAAqBC,IAArB,EAA2B;AAChC,QAAIC,SAAS,GAAGN,gBAAgB,CAACI,IAAD,EAAOC,IAAP,CAAhB,CAA6BC,SAA7C;AACA,WAAOA,SAAS,KAAKF,IAArB;AACD,GARc;AASfzB,EAAAA,OAAO,EAAEA,OATM;AAUf6B,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEnB,WAAW,CAACT,IAAI,CAAC4B,KAAN,CADX;AAEPC,IAAAA,SAAS,EAAEpB,WAAW,CAACT,IAAI,CAAC6B,SAAN,CAFf;AAGPC,IAAAA,SAAS,EAAErB,WAAW,CAACT,IAAI,CAAC8B,SAAN,CAHf;AAIPC,IAAAA,UAAU,EAAEtB,WAAW,CAACT,IAAI,CAAC+B,UAAN,CAJhB;AAKPC,IAAAA,gBAAgB,EAAEvB,WAAW,CAACT,IAAI,CAACgC,gBAAN;AALtB;AAVM,CAAjB","sourcesContent":["\"use strict\";\n\nvar version = require(\"../package.json\").version;\n\nvar core = require(\"./main/core\");\n\nvar internalPlugins = [require(\"./language-js\")];\n\nvar isArray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) === \"[object Array]\";\n}; // Luckily `opts` is always the 2nd argument\n\n\nfunction withPlugins(fn) {\n  return function () {\n    var args = Array.from(arguments);\n    var plugins = args[1] && args[1].plugins || [];\n\n    if (!isArray(plugins)) {\n      plugins = Object.values(plugins);\n    }\n\n    args[1] = Object.assign({}, args[1], {\n      plugins: internalPlugins.concat(plugins)\n    });\n    return fn.apply(null, args);\n  };\n}\n\nvar formatWithCursor = withPlugins(core.formatWithCursor);\nmodule.exports = {\n  formatWithCursor: formatWithCursor,\n  format: function format(text, opts) {\n    return formatWithCursor(text, opts).formatted;\n  },\n  check: function check(text, opts) {\n    var formatted = formatWithCursor(text, opts).formatted;\n    return formatted === text;\n  },\n  version: version,\n  __debug: {\n    parse: withPlugins(core.parse),\n    formatAST: withPlugins(core.formatAST),\n    formatDoc: withPlugins(core.formatDoc),\n    printToDoc: withPlugins(core.printToDoc),\n    printDocToString: withPlugins(core.printDocToString)\n  }\n};"]},"metadata":{},"sourceType":"script"}