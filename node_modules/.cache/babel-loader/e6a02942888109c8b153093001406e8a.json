{"ast":null,"code":"\"use strict\";\n\nvar path = require(\"path\");\n\nvar ConfigError = require(\"../common/errors\").ConfigError;\n\nvar jsLoc = require(\"../language-js/loc\");\n\nvar locStart = jsLoc.locStart,\n    locEnd = jsLoc.locEnd; // Use defineProperties()/getOwnPropertyDescriptor() to prevent\n// triggering the parsers getters.\n\nvar ownNames = Object.getOwnPropertyNames;\nvar ownDescriptor = Object.getOwnPropertyDescriptor;\n\nfunction getParsers(options) {\n  var parsers = {};\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = options.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var plugin = _step.value;\n\n      if (!plugin.parsers) {\n        continue;\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = ownNames(plugin.parsers)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var name = _step2.value;\n          Object.defineProperty(parsers, name, ownDescriptor(plugin.parsers, name));\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return parsers;\n}\n\nfunction resolveParser(opts, parsers) {\n  parsers = parsers || getParsers(opts);\n\n  if (typeof opts.parser === \"function\") {\n    // Custom parser API always works with JavaScript.\n    return {\n      parse: opts.parser,\n      astFormat: \"estree\",\n      locStart: locStart,\n      locEnd: locEnd\n    };\n  }\n\n  if (typeof opts.parser === \"string\") {\n    if (Object.prototype.hasOwnProperty.call(parsers, opts.parser)) {\n      return parsers[opts.parser];\n    }\n    /* istanbul ignore next */\n\n\n    if (process.env.PRETTIER_TARGET === \"universal\") {\n      throw new ConfigError(\"Couldn't resolve parser \\\"\".concat(opts.parser, \"\\\". Parsers must be explicitly added to the standalone bundle.\"));\n    } else {\n      try {\n        return {\n          parse: eval(\"require\")(path.resolve(process.cwd(), opts.parser)),\n          astFormat: \"estree\",\n          locStart: locStart,\n          locEnd: locEnd\n        };\n      } catch (err) {\n        /* istanbul ignore next */\n        throw new ConfigError(\"Couldn't resolve parser \\\"\".concat(opts.parser, \"\\\"\"));\n      }\n    }\n  }\n}\n\nfunction parse(text, opts) {\n  var parsers = getParsers(opts); // Create a new object {parserName: parseFn}. Uses defineProperty() to only call\n  // the parsers getters when actually calling the parser `parse` function.\n\n  var parsersForCustomParserApi = Object.keys(parsers).reduce(function (object, parserName) {\n    return Object.defineProperty(object, parserName, {\n      enumerable: true,\n      get: function get() {\n        return parsers[parserName].parse;\n      }\n    });\n  }, {});\n  var parser = resolveParser(opts, parsers);\n\n  try {\n    if (parser.preprocess) {\n      text = parser.preprocess(text, opts);\n    }\n\n    return {\n      text: text,\n      ast: parser.parse(text, parsersForCustomParserApi, opts)\n    };\n  } catch (error) {\n    var loc = error.loc;\n\n    if (loc) {\n      var codeFrame = require(\"@babel/code-frame\");\n\n      error.codeFrame = codeFrame.codeFrameColumns(text, loc, {\n        highlightCode: true\n      });\n      error.message += \"\\n\" + error.codeFrame;\n      throw error;\n    }\n    /* istanbul ignore next */\n\n\n    throw error.stack;\n  }\n}\n\nmodule.exports = {\n  parse: parse,\n  resolveParser: resolveParser\n};","map":{"version":3,"sources":["/Users/pranamyavadlamani/Desktop/Research/PortFolio/portfolio-site/node_modules/@miksu/prettier/lib/main/parser.js"],"names":["path","require","ConfigError","jsLoc","locStart","locEnd","ownNames","Object","getOwnPropertyNames","ownDescriptor","getOwnPropertyDescriptor","getParsers","options","parsers","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","plugins","Symbol","iterator","_step","next","done","plugin","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","name","defineProperty","err","resolveParser","opts","parser","parse","astFormat","prototype","hasOwnProperty","call","process","env","PRETTIER_TARGET","concat","eval","resolve","cwd","text","parsersForCustomParserApi","keys","reduce","object","parserName","enumerable","get","preprocess","ast","error","loc","codeFrame","codeFrameColumns","highlightCode","message","stack","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar path = require(\"path\");\n\nvar ConfigError = require(\"../common/errors\").ConfigError;\n\nvar jsLoc = require(\"../language-js/loc\");\n\nvar locStart = jsLoc.locStart,\n    locEnd = jsLoc.locEnd; // Use defineProperties()/getOwnPropertyDescriptor() to prevent\n// triggering the parsers getters.\n\nvar ownNames = Object.getOwnPropertyNames;\nvar ownDescriptor = Object.getOwnPropertyDescriptor;\n\nfunction getParsers(options) {\n  var parsers = {};\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = options.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var plugin = _step.value;\n\n      if (!plugin.parsers) {\n        continue;\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = ownNames(plugin.parsers)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var name = _step2.value;\n          Object.defineProperty(parsers, name, ownDescriptor(plugin.parsers, name));\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return parsers;\n}\n\nfunction resolveParser(opts, parsers) {\n  parsers = parsers || getParsers(opts);\n\n  if (typeof opts.parser === \"function\") {\n    // Custom parser API always works with JavaScript.\n    return {\n      parse: opts.parser,\n      astFormat: \"estree\",\n      locStart: locStart,\n      locEnd: locEnd\n    };\n  }\n\n  if (typeof opts.parser === \"string\") {\n    if (Object.prototype.hasOwnProperty.call(parsers, opts.parser)) {\n      return parsers[opts.parser];\n    }\n    /* istanbul ignore next */\n\n\n    if (process.env.PRETTIER_TARGET === \"universal\") {\n      throw new ConfigError(\"Couldn't resolve parser \\\"\".concat(opts.parser, \"\\\". Parsers must be explicitly added to the standalone bundle.\"));\n    } else {\n      try {\n        return {\n          parse: eval(\"require\")(path.resolve(process.cwd(), opts.parser)),\n          astFormat: \"estree\",\n          locStart: locStart,\n          locEnd: locEnd\n        };\n      } catch (err) {\n        /* istanbul ignore next */\n        throw new ConfigError(\"Couldn't resolve parser \\\"\".concat(opts.parser, \"\\\"\"));\n      }\n    }\n  }\n}\n\nfunction parse(text, opts) {\n  var parsers = getParsers(opts); // Create a new object {parserName: parseFn}. Uses defineProperty() to only call\n  // the parsers getters when actually calling the parser `parse` function.\n\n  var parsersForCustomParserApi = Object.keys(parsers).reduce(function (object, parserName) {\n    return Object.defineProperty(object, parserName, {\n      enumerable: true,\n      get: function get() {\n        return parsers[parserName].parse;\n      }\n    });\n  }, {});\n  var parser = resolveParser(opts, parsers);\n\n  try {\n    if (parser.preprocess) {\n      text = parser.preprocess(text, opts);\n    }\n\n    return {\n      text: text,\n      ast: parser.parse(text, parsersForCustomParserApi, opts)\n    };\n  } catch (error) {\n    var loc = error.loc;\n\n    if (loc) {\n      var codeFrame = require(\"@babel/code-frame\");\n\n      error.codeFrame = codeFrame.codeFrameColumns(text, loc, {\n        highlightCode: true\n      });\n      error.message += \"\\n\" + error.codeFrame;\n      throw error;\n    }\n    /* istanbul ignore next */\n\n\n    throw error.stack;\n  }\n}\n\nmodule.exports = {\n  parse: parse,\n  resolveParser: resolveParser\n};"]},"metadata":{},"sourceType":"script"}