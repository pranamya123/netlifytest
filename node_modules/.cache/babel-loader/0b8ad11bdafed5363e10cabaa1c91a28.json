{"ast":null,"code":"/*\nCopyright (c) 2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport * as React from 'react';\nimport { PropTypes } from '../index';\nimport Knob from './knob';\n\nconst KnobColumn = ({\n  state,\n  knobNames,\n  error,\n  set\n}) => {\n  return React.createElement(\"div\", {\n    style: {\n      flexBasis: '50%',\n      padding: `0 16px`\n    }\n  }, knobNames.map(name => React.createElement(Knob, {\n    key: name,\n    name: name,\n    error: error.where === name ? error.msg : null,\n    description: state[name].description,\n    type: state[name].type,\n    val: state[name].value,\n    options: state[name].options,\n    placeholder: state[name].placeholder,\n    set: value => set(value, name),\n    enumName: state[name].enumName,\n    imports: state[name].imports\n  })));\n};\n\nconst Knobs = ({\n  state,\n  set,\n  error\n}) => {\n  const [showAllKnobs, setShowAllKnobs] = React.useState(false);\n  const allKnobNames = Object.keys(state).filter(name => state[name].type !== PropTypes.Custom);\n  const filteredKnobNames = allKnobNames.filter(name => state[name].hidden !== true);\n  const knobNames = showAllKnobs ? allKnobNames : filteredKnobNames;\n  const firstGroup = knobNames.slice(0, Math.round(knobNames.length / 2));\n  const secondGroup = knobNames.slice(Math.round(knobNames.length / 2));\n  return React.createElement(React.Fragment, null, React.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n        @media screen and (max-width: 600px) {\n          .react-view-columns {\n            flex-wrap: wrap;\n          }\n        }\n        .react-view-columns {\n          display: flex;\n          margin: 0 -16px;\n        }\n      `\n    }\n  }), React.createElement(\"div\", {\n    className: \"react-view-columns\"\n  }, React.createElement(KnobColumn, {\n    state: state,\n    knobNames: firstGroup,\n    set: set,\n    error: error\n  }), React.createElement(KnobColumn, {\n    state: state,\n    knobNames: secondGroup,\n    set: set,\n    error: error\n  })), filteredKnobNames.length !== allKnobNames.length && React.createElement(\"button\", {\n    onClick: () => setShowAllKnobs(!showAllKnobs)\n  }, showAllKnobs ? 'Show only basic props' : 'Show all props'));\n};\n\nexport default Knobs;","map":{"version":3,"sources":["../../../src/ui/knobs.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nCopyright (c) 2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport * as React from 'react';\nimport { PropTypes } from '../index';\nimport Knob from './knob';\nconst KnobColumn = ({ state, knobNames, error, set, }) => {\n    return (React.createElement(\"div\", { style: {\n            flexBasis: '50%',\n            padding: `0 16px`,\n        } }, knobNames.map((name) => (React.createElement(Knob, { key: name, name: name, error: error.where === name ? error.msg : null, description: state[name].description, type: state[name].type, val: state[name].value, options: state[name].options, placeholder: state[name].placeholder, set: (value) => set(value, name), enumName: state[name].enumName, imports: state[name].imports })))));\n};\nconst Knobs = ({ state, set, error }) => {\n    const [showAllKnobs, setShowAllKnobs] = React.useState(false);\n    const allKnobNames = Object.keys(state).filter(name => state[name].type !== PropTypes.Custom);\n    const filteredKnobNames = allKnobNames.filter((name) => state[name].hidden !== true);\n    const knobNames = showAllKnobs ? allKnobNames : filteredKnobNames;\n    const firstGroup = knobNames.slice(0, Math.round(knobNames.length / 2));\n    const secondGroup = knobNames.slice(Math.round(knobNames.length / 2));\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"style\", { dangerouslySetInnerHTML: {\n                __html: `\n        @media screen and (max-width: 600px) {\n          .react-view-columns {\n            flex-wrap: wrap;\n          }\n        }\n        .react-view-columns {\n          display: flex;\n          margin: 0 -16px;\n        }\n      `,\n            } }),\n        React.createElement(\"div\", { className: \"react-view-columns\" },\n            React.createElement(KnobColumn, { state: state, knobNames: firstGroup, set: set, error: error }),\n            React.createElement(KnobColumn, { state: state, knobNames: secondGroup, set: set, error: error })),\n        filteredKnobNames.length !== allKnobNames.length && (React.createElement(\"button\", { onClick: () => setShowAllKnobs(!showAllKnobs) }, showAllKnobs ? 'Show only basic props' : 'Show all props'))));\n};\nexport default Knobs;\n//# sourceMappingURL=knobs.js.map"]},"metadata":{},"sourceType":"module"}