{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction massageAST(ast, options, parent) {\n  if (Array.isArray(ast)) {\n    return ast.map(function (e) {\n      return massageAST(e, options, parent);\n    }).filter(function (e) {\n      return e;\n    });\n  }\n\n  if (!ast || _typeof(ast) !== \"object\") {\n    return ast;\n  }\n\n  var newObj = {};\n\n  for (var _i = 0, _Object$keys = Object.keys(ast); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (typeof ast[key] !== \"function\") {\n      newObj[key] = massageAST(ast[key], options, ast);\n    }\n  }\n\n  if (options.printer.massageAstNode) {\n    var result = options.printer.massageAstNode(ast, newObj, parent);\n\n    if (result === null) {\n      return undefined;\n    }\n\n    if (result) {\n      return result;\n    }\n  }\n\n  return newObj;\n}\n\nmodule.exports = massageAST;","map":{"version":3,"sources":["/Users/pranamyavadlamani/Desktop/Research/PortFolio/portfolio-site/node_modules/@miksu/prettier/lib/main/massage-ast.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","massageAST","ast","options","parent","Array","isArray","map","e","filter","newObj","_i","_Object$keys","Object","keys","length","key","printer","massageAstNode","result","undefined","module","exports"],"mappings":"AAAA;;AAEA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE/V,SAASK,UAAT,CAAoBC,GAApB,EAAyBC,OAAzB,EAAkCC,MAAlC,EAA0C;AACxC,MAAIC,KAAK,CAACC,OAAN,CAAcJ,GAAd,CAAJ,EAAwB;AACtB,WAAOA,GAAG,CAACK,GAAJ,CAAQ,UAAUC,CAAV,EAAa;AAC1B,aAAOP,UAAU,CAACO,CAAD,EAAIL,OAAJ,EAAaC,MAAb,CAAjB;AACD,KAFM,EAEJK,MAFI,CAEG,UAAUD,CAAV,EAAa;AACrB,aAAOA,CAAP;AACD,KAJM,CAAP;AAKD;;AAED,MAAI,CAACN,GAAD,IAAQP,OAAO,CAACO,GAAD,CAAP,KAAiB,QAA7B,EAAuC;AACrC,WAAOA,GAAP;AACD;;AAED,MAAIQ,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYZ,GAAZ,CAAhC,EAAkDS,EAAE,GAAGC,YAAY,CAACG,MAApE,EAA4EJ,EAAE,EAA9E,EAAkF;AAChF,QAAIK,GAAG,GAAGJ,YAAY,CAACD,EAAD,CAAtB;;AAEA,QAAI,OAAOT,GAAG,CAACc,GAAD,CAAV,KAAoB,UAAxB,EAAoC;AAClCN,MAAAA,MAAM,CAACM,GAAD,CAAN,GAAcf,UAAU,CAACC,GAAG,CAACc,GAAD,CAAJ,EAAWb,OAAX,EAAoBD,GAApB,CAAxB;AACD;AACF;;AAED,MAAIC,OAAO,CAACc,OAAR,CAAgBC,cAApB,EAAoC;AAClC,QAAIC,MAAM,GAAGhB,OAAO,CAACc,OAAR,CAAgBC,cAAhB,CAA+BhB,GAA/B,EAAoCQ,MAApC,EAA4CN,MAA5C,CAAb;;AAEA,QAAIe,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAOC,SAAP;AACD;;AAED,QAAID,MAAJ,EAAY;AACV,aAAOA,MAAP;AACD;AACF;;AAED,SAAOT,MAAP;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiBrB,UAAjB","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction massageAST(ast, options, parent) {\n  if (Array.isArray(ast)) {\n    return ast.map(function (e) {\n      return massageAST(e, options, parent);\n    }).filter(function (e) {\n      return e;\n    });\n  }\n\n  if (!ast || _typeof(ast) !== \"object\") {\n    return ast;\n  }\n\n  var newObj = {};\n\n  for (var _i = 0, _Object$keys = Object.keys(ast); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (typeof ast[key] !== \"function\") {\n      newObj[key] = massageAST(ast[key], options, ast);\n    }\n  }\n\n  if (options.printer.massageAstNode) {\n    var result = options.printer.massageAstNode(ast, newObj, parent);\n\n    if (result === null) {\n      return undefined;\n    }\n\n    if (result) {\n      return result;\n    }\n  }\n\n  return newObj;\n}\n\nmodule.exports = massageAST;"]},"metadata":{},"sourceType":"script"}