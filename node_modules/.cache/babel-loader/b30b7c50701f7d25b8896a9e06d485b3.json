{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst chalk_1 = require(\"chalk\");\n\nconst leven = require(\"leven\");\n\nexports.levenUnknownHandler = (key, value, {\n  descriptor,\n  logger,\n  schemas\n}) => {\n  const messages = [`Ignored unknown option ${chalk_1.default.yellow(descriptor.pair({\n    key,\n    value\n  }))}.`];\n  const suggestion = Object.keys(schemas).sort().find(knownKey => leven(key, knownKey) < 3);\n\n  if (suggestion) {\n    messages.push(`Did you mean ${chalk_1.default.blue(descriptor.key(suggestion))}?`);\n  }\n\n  logger.warn(messages.join(' '));\n};","map":{"version":3,"sources":["/Users/pranamyavadlamani/Desktop/Research/PortFolio/portfolio-site/node_modules/vnopts/lib/handlers/unknown/leven.js"],"names":["Object","defineProperty","exports","value","chalk_1","require","leven","levenUnknownHandler","key","descriptor","logger","schemas","messages","default","yellow","pair","suggestion","keys","sort","find","knownKey","push","blue","warn","join"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACAH,OAAO,CAACK,mBAAR,GAA8B,CAACC,GAAD,EAAML,KAAN,EAAa;AAAEM,EAAAA,UAAF;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA;AAAtB,CAAb,KAAiD;AAC3E,QAAMC,QAAQ,GAAG,CACZ,0BAAyBR,OAAO,CAACS,OAAR,CAAgBC,MAAhB,CAAuBL,UAAU,CAACM,IAAX,CAAgB;AAAEP,IAAAA,GAAF;AAAOL,IAAAA;AAAP,GAAhB,CAAvB,CAAwD,GADrE,CAAjB;AAGA,QAAMa,UAAU,GAAGhB,MAAM,CAACiB,IAAP,CAAYN,OAAZ,EACdO,IADc,GAEdC,IAFc,CAETC,QAAQ,IAAId,KAAK,CAACE,GAAD,EAAMY,QAAN,CAAL,GAAuB,CAF1B,CAAnB;;AAGA,MAAIJ,UAAJ,EAAgB;AACZJ,IAAAA,QAAQ,CAACS,IAAT,CAAe,gBAAejB,OAAO,CAACS,OAAR,CAAgBS,IAAhB,CAAqBb,UAAU,CAACD,GAAX,CAAeQ,UAAf,CAArB,CAAiD,GAA/E;AACH;;AACDN,EAAAA,MAAM,CAACa,IAAP,CAAYX,QAAQ,CAACY,IAAT,CAAc,GAAd,CAAZ;AACH,CAXD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst chalk_1 = require(\"chalk\");\nconst leven = require(\"leven\");\nexports.levenUnknownHandler = (key, value, { descriptor, logger, schemas }) => {\n    const messages = [\n        `Ignored unknown option ${chalk_1.default.yellow(descriptor.pair({ key, value }))}.`,\n    ];\n    const suggestion = Object.keys(schemas)\n        .sort()\n        .find(knownKey => leven(key, knownKey) < 3);\n    if (suggestion) {\n        messages.push(`Did you mean ${chalk_1.default.blue(descriptor.key(suggestion))}?`);\n    }\n    logger.warn(messages.join(' '));\n};\n"]},"metadata":{},"sourceType":"script"}