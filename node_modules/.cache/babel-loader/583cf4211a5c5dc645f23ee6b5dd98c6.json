{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst HANDLER_KEYS = ['default', 'expected', 'validate', 'deprecated', 'forward', 'redirect', 'overlap', 'preprocess', 'postprocess'];\n\nfunction createSchema(SchemaConstructor, parameters) {\n  const schema = new SchemaConstructor(parameters);\n  const subSchema = Object.create(schema);\n\n  for (const handlerKey of HANDLER_KEYS) {\n    if (handlerKey in parameters) {\n      subSchema[handlerKey] = normalizeHandler(parameters[handlerKey], schema, Schema.prototype[handlerKey].length);\n    }\n  }\n\n  return subSchema;\n}\n\nexports.createSchema = createSchema;\n\nclass Schema {\n  constructor(parameters) {\n    this.name = parameters.name;\n  }\n\n  static create(parameters) {\n    // @ts-ignore: https://github.com/Microsoft/TypeScript/issues/5863\n    return createSchema(this, parameters);\n  }\n\n  default(_utils) {\n    return undefined;\n  } // istanbul ignore next: this is actually an abstract method but we need a placeholder to get `function.length`\n\n\n  expected(_utils) {\n    return 'nothing';\n  } // istanbul ignore next: this is actually an abstract method but we need a placeholder to get `function.length`\n\n\n  validate(_value, _utils) {\n    return false;\n  }\n\n  deprecated(_value, _utils) {\n    return false;\n  }\n\n  forward(_value, _utils) {\n    return undefined;\n  }\n\n  redirect(_value, _utils) {\n    return undefined;\n  }\n\n  overlap(currentValue, _newValue, _utils) {\n    return currentValue;\n  }\n\n  preprocess(value, _utils) {\n    return value;\n  }\n\n  postprocess(value, _utils) {\n    return value;\n  }\n\n}\n\nexports.Schema = Schema;\n\nfunction normalizeHandler(handler, superSchema, handlerArgumentsLength) {\n  return typeof handler === 'function' ? (...args) => handler(...args.slice(0, handlerArgumentsLength - 1), superSchema, ...args.slice(handlerArgumentsLength - 1)) : () => handler;\n}","map":{"version":3,"sources":["/Users/pranamyavadlamani/Desktop/Research/PortFolio/portfolio-site/node_modules/vnopts/lib/schema.js"],"names":["Object","defineProperty","exports","value","HANDLER_KEYS","createSchema","SchemaConstructor","parameters","schema","subSchema","create","handlerKey","normalizeHandler","Schema","prototype","length","constructor","name","default","_utils","undefined","expected","validate","_value","deprecated","forward","redirect","overlap","currentValue","_newValue","preprocess","postprocess","handler","superSchema","handlerArgumentsLength","args","slice"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA,MAAMC,YAAY,GAAG,CACjB,SADiB,EAEjB,UAFiB,EAGjB,UAHiB,EAIjB,YAJiB,EAKjB,SALiB,EAMjB,UANiB,EAOjB,SAPiB,EAQjB,YARiB,EASjB,aATiB,CAArB;;AAWA,SAASC,YAAT,CAAsBC,iBAAtB,EAAyCC,UAAzC,EAAqD;AACjD,QAAMC,MAAM,GAAG,IAAIF,iBAAJ,CAAsBC,UAAtB,CAAf;AACA,QAAME,SAAS,GAAGT,MAAM,CAACU,MAAP,CAAcF,MAAd,CAAlB;;AACA,OAAK,MAAMG,UAAX,IAAyBP,YAAzB,EAAuC;AACnC,QAAIO,UAAU,IAAIJ,UAAlB,EAA8B;AAC1BE,MAAAA,SAAS,CAACE,UAAD,CAAT,GAAwBC,gBAAgB,CAACL,UAAU,CAACI,UAAD,CAAX,EAAyBH,MAAzB,EAAiCK,MAAM,CAACC,SAAP,CAAiBH,UAAjB,EAA6BI,MAA9D,CAAxC;AACH;AACJ;;AACD,SAAON,SAAP;AACH;;AACDP,OAAO,CAACG,YAAR,GAAuBA,YAAvB;;AACA,MAAMQ,MAAN,CAAa;AACTG,EAAAA,WAAW,CAACT,UAAD,EAAa;AACpB,SAAKU,IAAL,GAAYV,UAAU,CAACU,IAAvB;AACH;;AACD,SAAOP,MAAP,CAAcH,UAAd,EAA0B;AACtB;AACA,WAAOF,YAAY,CAAC,IAAD,EAAOE,UAAP,CAAnB;AACH;;AACDW,EAAAA,OAAO,CAACC,MAAD,EAAS;AACZ,WAAOC,SAAP;AACH,GAVQ,CAWT;;;AACAC,EAAAA,QAAQ,CAACF,MAAD,EAAS;AACb,WAAO,SAAP;AACH,GAdQ,CAeT;;;AACAG,EAAAA,QAAQ,CAACC,MAAD,EAASJ,MAAT,EAAiB;AACrB,WAAO,KAAP;AACH;;AACDK,EAAAA,UAAU,CAACD,MAAD,EAASJ,MAAT,EAAiB;AACvB,WAAO,KAAP;AACH;;AACDM,EAAAA,OAAO,CAACF,MAAD,EAASJ,MAAT,EAAiB;AACpB,WAAOC,SAAP;AACH;;AACDM,EAAAA,QAAQ,CAACH,MAAD,EAASJ,MAAT,EAAiB;AACrB,WAAOC,SAAP;AACH;;AACDO,EAAAA,OAAO,CAACC,YAAD,EAAeC,SAAf,EAA0BV,MAA1B,EAAkC;AACrC,WAAOS,YAAP;AACH;;AACDE,EAAAA,UAAU,CAAC3B,KAAD,EAAQgB,MAAR,EAAgB;AACtB,WAAOhB,KAAP;AACH;;AACD4B,EAAAA,WAAW,CAAC5B,KAAD,EAAQgB,MAAR,EAAgB;AACvB,WAAOhB,KAAP;AACH;;AApCQ;;AAsCbD,OAAO,CAACW,MAAR,GAAiBA,MAAjB;;AACA,SAASD,gBAAT,CAA0BoB,OAA1B,EAAmCC,WAAnC,EAAgDC,sBAAhD,EAAwE;AACpE,SAAO,OAAOF,OAAP,KAAmB,UAAnB,GACD,CAAC,GAAGG,IAAJ,KAAaH,OAAO,CAAC,GAAGG,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcF,sBAAsB,GAAG,CAAvC,CAAJ,EAA+CD,WAA/C,EAA4D,GAAGE,IAAI,CAACC,KAAL,CAAWF,sBAAsB,GAAG,CAApC,CAA/D,CADnB,GAED,MAAMF,OAFZ;AAGH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst HANDLER_KEYS = [\n    'default',\n    'expected',\n    'validate',\n    'deprecated',\n    'forward',\n    'redirect',\n    'overlap',\n    'preprocess',\n    'postprocess',\n];\nfunction createSchema(SchemaConstructor, parameters) {\n    const schema = new SchemaConstructor(parameters);\n    const subSchema = Object.create(schema);\n    for (const handlerKey of HANDLER_KEYS) {\n        if (handlerKey in parameters) {\n            subSchema[handlerKey] = normalizeHandler(parameters[handlerKey], schema, Schema.prototype[handlerKey].length);\n        }\n    }\n    return subSchema;\n}\nexports.createSchema = createSchema;\nclass Schema {\n    constructor(parameters) {\n        this.name = parameters.name;\n    }\n    static create(parameters) {\n        // @ts-ignore: https://github.com/Microsoft/TypeScript/issues/5863\n        return createSchema(this, parameters);\n    }\n    default(_utils) {\n        return undefined;\n    }\n    // istanbul ignore next: this is actually an abstract method but we need a placeholder to get `function.length`\n    expected(_utils) {\n        return 'nothing';\n    }\n    // istanbul ignore next: this is actually an abstract method but we need a placeholder to get `function.length`\n    validate(_value, _utils) {\n        return false;\n    }\n    deprecated(_value, _utils) {\n        return false;\n    }\n    forward(_value, _utils) {\n        return undefined;\n    }\n    redirect(_value, _utils) {\n        return undefined;\n    }\n    overlap(currentValue, _newValue, _utils) {\n        return currentValue;\n    }\n    preprocess(value, _utils) {\n        return value;\n    }\n    postprocess(value, _utils) {\n        return value;\n    }\n}\nexports.Schema = Schema;\nfunction normalizeHandler(handler, superSchema, handlerArgumentsLength) {\n    return typeof handler === 'function'\n        ? (...args) => handler(...args.slice(0, handlerArgumentsLength - 1), superSchema, ...args.slice(handlerArgumentsLength - 1))\n        : () => handler;\n}\n"]},"metadata":{},"sourceType":"script"}