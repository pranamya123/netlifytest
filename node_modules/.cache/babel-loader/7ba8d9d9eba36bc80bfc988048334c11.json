{"ast":null,"code":"/*\nCopyright (c) 2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport * as React from 'react';\nimport SimpleEditor from 'react-simple-code-editor';\nimport Highlight, { Prism } from 'prism-react-renderer';\nimport { useValueDebounce, lightTheme } from '../index';\nimport { getStyles } from '../utils';\n\nconst highlightCode = ({\n  code,\n  theme,\n  transformToken,\n  language\n}) => React.createElement(Highlight, {\n  Prism: Prism,\n  code: code,\n  theme: theme,\n  language: language || 'jsx'\n}, ({\n  tokens,\n  getLineProps,\n  getTokenProps\n}) => React.createElement(React.Fragment, null, tokens.map((line, i) => React.createElement(\"div\", Object.assign({\n  key: i\n}, getLineProps({\n  line,\n  key: i\n})), line.map((token, key) => {\n  const tokenProps = getTokenProps({\n    token,\n    key\n  });\n\n  if (transformToken) {\n    return transformToken(tokenProps);\n  }\n\n  return React.createElement(\"span\", Object.assign({\n    key: key\n  }, tokenProps));\n})))));\n\nconst Editor = ({\n  code: globalCode,\n  transformToken,\n  onChange,\n  placeholder,\n  language,\n  theme,\n  ['data-testid']: testid,\n  className\n}) => {\n  const [focused, setFocused] = React.useState(false);\n  const editorTheme = Object.assign(Object.assign({}, theme || lightTheme), {\n    plain: Object.assign({\n      whiteSpace: 'break-spaces'\n    }, (theme || lightTheme).plain)\n  });\n  const [code, setCode] = useValueDebounce(globalCode, onChange);\n  return React.createElement(\"div\", Object.assign({\n    \"data-testid\": testid\n  }, getStyles({\n    boxSizing: 'border-box',\n    paddingLeft: '4px',\n    paddingRight: '4px',\n    maxWidth: 'auto',\n    overflow: 'hidden',\n    border: focused ? '1px solid #276EF1' : '1px solid #CCC',\n    borderRadius: '5px'\n  }, className)), React.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: `.npm__react-simple-code-editor__textarea { outline: none !important }`\n    }\n  }), React.createElement(SimpleEditor, {\n    value: code || '',\n    placeholder: placeholder,\n    highlight: code => highlightCode({\n      code,\n      theme: editorTheme,\n      transformToken,\n      language\n    }),\n    onValueChange: code => setCode(code),\n    onFocus: () => setFocused(true),\n    onBlur: () => setFocused(false),\n    padding: 8,\n    style: editorTheme.plain\n  }));\n};\n\nexport default Editor;","map":{"version":3,"sources":["../../../src/ui/editor.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\nCopyright (c) 2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport * as React from 'react';\nimport SimpleEditor from 'react-simple-code-editor';\nimport Highlight, { Prism } from 'prism-react-renderer';\nimport { useValueDebounce, lightTheme, } from '../index';\nimport { getStyles } from '../utils';\nconst highlightCode = ({ code, theme, transformToken, language, }) => (React.createElement(Highlight, { Prism: Prism, code: code, theme: theme, language: language || 'jsx' }, ({ tokens, getLineProps, getTokenProps }) => (React.createElement(React.Fragment, null, tokens.map((line, i) => (React.createElement(\"div\", Object.assign({ key: i }, getLineProps({ line, key: i })), line.map((token, key) => {\n    const tokenProps = getTokenProps({ token, key });\n    if (transformToken) {\n        return transformToken(tokenProps);\n    }\n    return React.createElement(\"span\", Object.assign({ key: key }, tokenProps));\n}))))))));\nconst Editor = ({ code: globalCode, transformToken, onChange, placeholder, language, theme, ['data-testid']: testid, className, }) => {\n    const [focused, setFocused] = React.useState(false);\n    const editorTheme = Object.assign(Object.assign({}, (theme || lightTheme)), { plain: Object.assign({ whiteSpace: 'break-spaces' }, (theme || lightTheme).plain) });\n    const [code, setCode] = useValueDebounce(globalCode, onChange);\n    return (React.createElement(\"div\", Object.assign({ \"data-testid\": testid }, getStyles({\n        boxSizing: 'border-box',\n        paddingLeft: '4px',\n        paddingRight: '4px',\n        maxWidth: 'auto',\n        overflow: 'hidden',\n        border: focused ? '1px solid #276EF1' : '1px solid #CCC',\n        borderRadius: '5px',\n    }, className)),\n        React.createElement(\"style\", { dangerouslySetInnerHTML: {\n                __html: `.npm__react-simple-code-editor__textarea { outline: none !important }`,\n            } }),\n        React.createElement(SimpleEditor, { value: code || '', placeholder: placeholder, highlight: code => highlightCode({ code, theme: editorTheme, transformToken, language }), onValueChange: code => setCode(code), onFocus: () => setFocused(true), onBlur: () => setFocused(false), padding: 8, style: editorTheme.plain })));\n};\nexport default Editor;\n//# sourceMappingURL=editor.js.map"]},"metadata":{},"sourceType":"module"}