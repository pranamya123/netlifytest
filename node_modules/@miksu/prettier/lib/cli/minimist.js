"use strict";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var minimist = require("minimist");

var PLACEHOLDER = null;
/**
 * unspecified boolean flag without default value is parsed as `undefined` instead of `false`
 */

module.exports = function (args, options) {
  var _boolean = options["boolean"] || [];

  var defaults = options["default"] || {};

  var booleanWithoutDefault = _boolean.filter(function (key) {
    return !(key in defaults);
  });

  var newDefaults = Object.assign({}, defaults, booleanWithoutDefault.reduce(function (reduced, key) {
    return Object.assign(reduced, _defineProperty({}, key, PLACEHOLDER));
  }, {}));
  var parsed = minimist(args, Object.assign({}, options, {
    "default": newDefaults
  }));
  return Object.keys(parsed).reduce(function (reduced, key) {
    if (parsed[key] !== PLACEHOLDER) {
      reduced[key] = parsed[key];
    }

    return reduced;
  }, {});
};